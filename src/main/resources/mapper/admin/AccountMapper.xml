<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.framework.admin.mapper.AccountMapper">

    <insert id="save" parameterType="com.base.framework.admin.model.entity.SysAccount" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_account (id, parent_id, hospital_id, name, account, mobile, email, recipient, role_code, is_active, password, phone, created_by)
        VALUES (#{id}, #{parentId}, #{hospitalId}, #{name}, #{account}, #{mobile}, #{email}, #{recipient}, #{roleCode}, #{isActive}, #{password}, #{phone}, #{createdBy})
    </insert>

    <select id="getAccountInfo" resultType="com.base.framework.admin.model.entity.SysAccount">
        SELECT
            id,
            name,
            account,
            mobile,
            email,
            recipient,
            phone,
            hospital_id AS hospitalId,
            role_code AS roleCode,
            created_by AS createdBy,
            created_at AS createdAt
        FROM
            sys_account
        WHERE
            account = #{account} AND
            password = #{password} AND
            is_deleted = 1 AND
            deleted_at IS NULL AND
            is_active = 1
    </select>

    <select id="getAccount" resultType="com.base.framework.admin.model.entity.SysAccount">
        SELECT
            id
        FROM sys_account WHERE account = #{account} AND is_deleted = 1 AND deleted_at IS NULL AND is_active = 1
    </select>

    <select id="getUserInfoById" resultType="com.base.framework.admin.model.entity.SysAccount">
        SELECT
            id,
            name,
            account,
            hospital_id AS hospitalId,
            mobile,
            email,
            recipient,
            password,
            phone,
            role_code AS roleCode,
            is_active AS isActive,
            created_by AS createdBy,
            created_at AS createdAt
        FROM
            sys_account
        WHERE
            id = #{id} AND is_deleted = 1 AND deleted_at IS NULL
    </select>

    <select id="queryUserList" resultType="com.base.framework.admin.model.entity.SysAccount">
        SELECT
            sa.id,
            sa.name,
            sa.account,
            sa.mobile,
            sa.email,
            sa.recipient,
            sa.phone,
            sa.role_code AS roleCode,
            sa.created_at AS createdAt,
            sa.created_by AS createdBy,
            sa.is_active AS isActive,
            sr.name AS roleName,
            ac.name AS parentName,
            mh.name AS hospitalName
        FROM sys_account sa
        LEFT JOIN sys_role sr ON sa.role_code = sr.code
        LEFT JOIN sys_account ac ON sa.parent_id = ac.id
        LEFT JOIN m_hospital mh ON mh.id = sa.hospital_id
        <where>
            sa.is_deleted = 1 AND sa.deleted_at IS NULL AND sa.role_code != 'SUPER_ADMIN'
            <if test="name != '' and name != null">
                AND sa.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="isActive != '' and isActive != null">
                AND sa.is_active = #{isActive}
            </if>
            <if test="roleCode != '' and roleCode != null">
                AND sa.role_code = #{roleCode}
            </if>
            <if test="parentId != '' and parentId != null">
                AND sa.parent_id = #{parentId} OR sa.id = #{parentId}
            </if>
        </where>
    </select>

    <select id="countTotal" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            sys_account sa
        <where>
            sa.is_deleted = 1 AND sa.deleted_at IS NULL AND sa.role_code != 'SUPER_ADMIN'
            <if test="name != '' and name != null">
                AND sa.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="isActive != '' and isActive != null">
                AND sa.is_active = #{isActive}
            </if>
            <if test="roleCode != '' and roleCode != null">
                AND sa.role_code = #{roleCode}
            </if>
            <if test="parentId != '' and parentId != null">
                AND sa.parent_id = #{parentId} OR sa.id = #{parentId}
            </if>
        </where>
    </select>

    <update id="delete">
        UPDATE sys_account SET is_deleted = 0, deleted_at = now(), deleted_by = #{userName} WHERE id = #{id}
    </update>

    <update id="update">
        UPDATE
            sys_account
        SET
            name = #{name},
            mobile = #{mobile},
            role_code = #{roleCode},
            is_active = #{isActive},
            hospital_id = #{hospitalId},
            email = #{email},
            phone = #{phone},
            recipient = #{recipient},
            password = #{password},
            updated_at = now(),
            updated_by = #{updatedBy}
        WHERE id = #{id}
    </update>

    <update id="updateState">
        UPDATE
            sys_account
        SET
            is_active = #{isActive},
            updated_at = now(),
            updated_by = #{updatedBy}
        WHERE
            id = #{id}
    </update>

    <update id="updatePassword">
        UPDATE
            sys_account
        SET
            password = #{newPassword},
            updated_at = now(),
            updated_by = #{updatedBy}
        WHERE
            id = #{id}
    </update>

    <select id="getAdminUser" resultType="com.base.framework.admin.model.entity.SysAccount">
        SELECT
            id, name
        FROM
            sys_account
        WHERE
            role_code = 'ADMIN' AND
            is_deleted = 1 AND
            deleted_at IS NULL AND
            is_active = 1
    </select>

</mapper>
